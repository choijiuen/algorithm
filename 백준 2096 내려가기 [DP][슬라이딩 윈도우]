import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.Collections;
import java.util.Deque;
import java.util.LinkedList;
import java.util.StringTokenizer;

public class BJ_2096 {

public static void main(String[] args) throws NumberFormatException, IOException {
BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
Deque deque = new LinkedList<>();


int N = Integer.parseInt(br.readLine());
int a[][] = new int [N][3];
int max[][] = new int [N][3];
int min[][] = new int [N][3];


StringTokenizer st ;


for(int i=0; i<N; i++) {
st = new StringTokenizer(br.readLine());
for(int j=0; j<3; j++) {
max[i][j] = Integer.parseInt(st.nextToken());
min[i][j] = max[i][j];
}

}



for(int i=1; i<N; i++) {
max[i][0] +=Math.max(max[i-1][0], max[i-1][1]);
max[i][1] +=Math.max(Math.max(max[i-1][0], max[i-1][1]), max[i-1][2]);
max[i][2] +=Math.max(max[i-1][1], max[i-1][2]);

min[i][0] +=Math.min(min[i-1][0], min[i-1][1]);
min[i][1] +=Math.min(Math.min(min[i-1][0], min[i-1][1]), min[i-1][2]);
min[i][2] +=Math.min(min[i-1][1], min[i-1][2]);



}

// System.out.println(min[N-1][0]);

Integer[] max1 = {max[N-1][0], max[N-1][1], max[N-1][2]};
int[] min1 = {min[N-1][0], min[N-1][1], min[N-1][2]};

// System.out.println(min1[0]);

Arrays.sort(max1, Collections.reverseOrder());
Arrays.sort(min1);

// System.out.println(min1[0]);

// for(int i=0; i<3; i++) {
// System.out.println(max1[i]+" "+min1[i]);
//
// }
System.out.print(max1[0]+" "+min1[0]);

// System.out.println(max[N-1][0]);
// System.out.println(max[N-1][1]);
// System.out.println(max[N-1][2]);
//
// System.out.println(min[N-1][0]);
// System.out.println(min[N-1][1]);
// System.out.println(min[N-1][2]);
}



}
